function TA = RADI_TAj(TA, j, t_res, TotR_TA, u_j, D_TA, DFF_j, z_res_j, ...
    tort2_j, z_res2_j, alpha_j, TAw)

TA_j = TA(j);
TA_jp1 = TA(j+1);
TA_jm1 = TA(j-1);

dTAj = t_res*(TotR_TA(j) ...
    - (u_j - D_TA*DFF_j).*(TA_jp1 - TA_jm1)./(2*z_res_j) ...
    + (D_TA./tort2_j).*((TA_jp1 - 2*TA_j + TA_jm1)./z_res2_j) ...
    + alpha_j.*(TAw - TA_j));
% ^For some reason, it's actually slower to put (u_j - D_TA*DFF_j) and
% (D_TA./tort2_j) into variables that are evaluated before the loop...
% // MPH

TA(j) = TA_j + dTAj;   %TA
